// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Post {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  content   String
  image     String?
  published Boolean   @default(false)
  author    User      @relation(fields: [authorId], references: [id])
  authorId  Int
  comments  Comment[]
  like      Like[]
}

model Comment {
  id        String   @id @default(cuid())
  text      String
  createdAt DateTime @default(now())

  Post   Post? @relation(fields: [postId], references: [id])
  postId Int?
  User   User? @relation(fields: [userId], references: [id])
  userId Int?
}

model Like {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  Post   Post? @relation(fields: [postId], references: [id])
  postId Int?
  User   User? @relation(fields: [userId], references: [id])
  userId Int?
}

model Profile {
  id  Int     @id @default(autoincrement())
  bio String?

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique
}

model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  name     String?
  username String    @unique
  password String
  posts    Post[]
  profile  Profile?
  Comment  Comment[]
  Like     Like[]
}
